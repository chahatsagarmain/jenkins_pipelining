pipeline {
    agent any
    
    environment {
        registry = "chahatsagarmain/jenkins_pipeline"
        registryCredential = "dockerCredentials"
    }

    stages {
        stage('checkout') {
            steps {
                git branch: 'main', credentialsId: '7851be4c-b419-4021-9d10-fad21d4e690d', url: 'https://github.com/chahatsagarmain/jenkins_pipelining'
            }
        }
        
        stage('SonarQube analysis') {
            environment {
                scannerHome = tool 'sonar-qube'
            }
            steps {
                withSonarQubeEnv('sonar-scanner') {
                    sh '''
                    ${scannerHome}/bin/sonar-scanner 
                    '''
                }
            }
            
        }
        stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
        }
        
        stage("build stage"){
            steps{
                script{
                    echo "Docker building stage"
                    
                    dockerImage = docker.build("${registry}")
                    
                }
            }
        }
        
        stage("push Image"){
            steps{
                script{
                    echo "pushing image"
                    
                    docker.withRegistry( "https://index.docker.io/v1/" , "${registryCredential}" ) {
                        dockerImage.push()
                    }
                }
            }
        }
       
    }
}
